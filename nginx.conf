# Nginx 配置文件
# 路径：/etc/nginx/sites-available/onespecial.me
# 
# 使用说明：
# 1. 将此文件内容复制到服务器的 /etc/nginx/sites-available/onespecial.me
# 2. 创建符号链接：ln -s /etc/nginx/sites-available/onespecial.me /etc/nginx/sites-enabled/
# 3. 测试配置：nginx -t
# 4. 重启 Nginx：systemctl restart nginx

# HTTP 服务器（重定向到 HTTPS）
server {
    listen 80;
    listen [::]:80;
    server_name onespecial.me www.onespecial.me;

    # Let's Encrypt 证书验证
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/onespecial.me;
    }

    # 重定向所有 HTTP 请求到 HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 服务器
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name onespecial.me www.onespecial.me;

    # SSL 证书配置（Certbot 会自动填充）
    ssl_certificate /etc/letsencrypt/live/onespecial.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/onespecial.me/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # 安全头部
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # 前端静态文件根目录
    root /var/www/onespecial.me;
    index index.html;

    # 访问日志和错误日志
    access_log /var/log/nginx/onespecial.me.access.log;
    error_log /var/log/nginx/onespecial.me.error.log;

    # Gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/x-javascript
        application/xml
        application/xml+rss
        application/rss+xml
        application/atom+xml
        image/svg+xml
        text/x-component
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # 代理后端 API
    location /api/ {
        # 代理到本地后端服务
        proxy_pass http://127.0.0.1:3000/;
        
        # WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # 代理头部
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 不缓存
        proxy_cache_bypass $http_upgrade;
        
        # 缓冲设置
        proxy_buffering off;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # 前端 SPA 路由处理
    location / {
        try_files $uri $uri/ /index.html;
        
        # 安全头部（避免 clickjacking）
        add_header X-Frame-Options "SAMEORIGIN" always;
    }

    # 静态资源缓存策略
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 禁止访问备份文件
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 健康检查端点（可选）
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
